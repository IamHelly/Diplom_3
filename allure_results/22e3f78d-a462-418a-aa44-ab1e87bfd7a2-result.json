{"name": "Проверка появления всплывающего окна с деталями, если кликнуть на ингредиент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"BurgerIngredient_ingredient__1TVf6 ml-4 mr-4 mb-8\" href=\"/ingredient/61c0c5a71d1f82001bdaaa6c\"> is not clickable at point (501,380) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31", "trace": "self = <tests.test_main_page.TestMainPage object at 0x000001F251A24EC0>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"3c67c0cd-c8c7-4c0e-a35e-7ffaded023d3\")>\n\n    @allure.title('Проверка появления всплывающего окна с деталями, если кликнуть на ингредиент')\n    @allure.description('Проверка, что в конструкторе при клике на ингредиент открывается всплывающее окно с деталями ингредиента')\n    def test_open_modal_window_card_ingredient(self, driver):\n        main_page = MainPage(driver, UrlsPage.BASE_URL)\n        main_page.open_page()\n        main_page.wait_title_page()\n>       main_page.click_to_card_ingredient()\n\ntests\\test_main_page.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:32: in click_to_card_ingredient\n    self.click_to_element(BasePageLocators.CARD_INGREDIENT)\npages\\base_page.py:28: in click_to_element\n    return self.wait_to_clickable_element(locator).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001F251FA14F0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <a class=\\\\\"BurgerIngredien...sys.mjs:205:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"BurgerIngredient_ingredient__1TVf6 ml-4 mr-4 mb-8\" href=\"/ingredient/61c0c5a71d1f82001bdaaa6c\"> is not clickable at point (501,380) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "description": "Проверка, что в конструкторе при клике на ингредиент открывается всплывающее окно с деталями ингредиента", "steps": [{"name": "Ожидание видимости заголовка раздела \"Конструктор\"", "status": "passed", "start": 1728881780203, "stop": 1728881780359}, {"name": "Клик на ингредиент в списке ингредиентов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <a class=\"BurgerIngredient_ingredient__1TVf6 ml-4 mr-4 mb-8\" href=\"/ingredient/61c0c5a71d1f82001bdaaa6c\"> is not clickable at point (501,380) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\n", "trace": "  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\pages\\main_page.py\", line 32, in click_to_card_ingredient\n    self.click_to_element(BasePageLocators.CARD_INGREDIENT)\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 28, in click_to_element\n    return self.wait_to_clickable_element(locator).click()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1728881780359, "stop": 1728881780407}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1728881778446, "stop": 1728881780409, "uuid": "0a294708-2139-4538-8bb7-d2a33667b14c", "historyId": "38763bbda3d29fa861c3de616b764cf2", "testCaseId": "ad3c362b36516b9e3285a8c4c4e755ae", "fullName": "tests.test_main_page.TestMainPage#test_open_modal_window_card_ingredient", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "DESKTOP-LJDD8TD"}, {"name": "thread", "value": "9240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}