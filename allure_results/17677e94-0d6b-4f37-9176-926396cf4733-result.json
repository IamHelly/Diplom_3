{"name": "Проверка отображения заказов залогиненного пользователя на странице \"Лента заказов\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.test_feed_order_page.TestFeedOrderPage object at 0x000001F2519FEB70>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f9529df7-2983-42c4-b55f-f4da328d108c\")>, login = None\n\n    @allure.title('Проверка отображения заказов залогиненного пользователя на странице \"Лента заказов\"')\n    @allure.description('Проверка, что заказы пользователя из раздела \"История заказов\" в личном кабинете отображаются на странице \"Лента заказов\"')\n    def test_feed_of_orders_page_has_order_user(self, driver, login):\n        feed_orders_page = FeedOrderPage(driver, UrlsPage.BASE_URL)\n        feed_orders_page.open_page()\n        feed_orders_page.drag_and_drop_ingredient_into_basket()\n        feed_orders_page.click_to_create_order_button()\n>       feed_orders_page.wait_id_completed_order()\n\ntests\\test_feed_order_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\feed_order_page.py:32: in wait_id_completed_order\n    self.wait_until_text_is_not(FeedOrderPageLocators.NUMBER_ORDER, '9999')\npages\\base_page.py:57: in wait_until_text_is_not\n    return WebDriverWait(self.driver, 4).until(lambda driver: self.driver.find_element(*locator).text != text)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f9529df7-2983-42c4-b55f-f4da328d108c\")>, method = <function BasePage.wait_until_text_is_not.<locals>.<lambda> at 0x000001F251FA5760>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Проверка, что заказы пользователя из раздела \"История заказов\" в личном кабинете отображаются на странице \"Лента заказов\"", "steps": [{"name": "Перетаскивание ингредиента в корзину", "status": "passed", "start": 1728881591786, "stop": 1728881592863}, {"name": "Клик по кнопке \"Оформить заказ\"", "status": "passed", "start": 1728881592863, "stop": 1728881593112}, {"name": "Ожидание, когда заказу присвоится номер, отличный от стандартного \"9999\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\pages\\feed_order_page.py\", line 32, in wait_id_completed_order\n    self.wait_until_text_is_not(FeedOrderPageLocators.NUMBER_ORDER, '9999')\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\pages\\base_page.py\", line 57, in wait_until_text_is_not\n    return WebDriverWait(self.driver, 4).until(lambda driver: self.driver.find_element(*locator).text != text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\olgam\\PycharmProjects\\Diplom_3\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1728881593113, "stop": 1728881597229}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1728881591582, "stop": 1728881597233, "uuid": "3aba3291-9259-4fd6-9ae8-e3e6dd1d493e", "historyId": "2d7a469bb77d48162ef59d3de6d075d7", "testCaseId": "1876ca3822c2c320ef67aa71d3bbc6cc", "fullName": "tests.test_feed_order_page.TestFeedOrderPage#test_feed_of_orders_page_has_order_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_feed_order_page"}, {"name": "subSuite", "value": "TestFeedOrderPage"}, {"name": "host", "value": "DESKTOP-LJDD8TD"}, {"name": "thread", "value": "9240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_feed_order_page"}]}